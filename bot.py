import telebot
import json
import requests
from telebot import types

token = '1459161586:AAHUgwDTqa-IMm5KJD-Hh3bRm01rJ0TtuPc'
bot = telebot.TeleBot(token)
token_ya = 'dict.1.1.20201210T104723Z.308567fc9aedf8f7.9a02e5033bb6b2e7b497a2624c7aae86a37a5de5'
base_url = 'https://dictionary.yandex.net/api/v1/dicservice.json/lookup?'
# –∑–¥–µ—Å—å –æ–±–Ω—É–ª—è–µ–º language, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –æ–Ω –ø—Ä–æ—Å–∏–ª –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫, –∞ –Ω–µ –≤–∞–ª–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏
language = {}

@bot.message_handler(commands=['start'])
def start_command(message):
    # –∑–¥–µ—Å—å –æ–±–Ω—É–ª—è–µ–º language, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —è–∑—ã–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞–ª –≤–≤–æ–¥
    global language
    language = {}
    hello_and_help = '–ü—Ä–∏–≤–µ—Ç, —è —Å–ª–æ–≤–∞—Ä—å!\n\n–Ø —É–º–µ—é –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n\n' \
                     '–Ø –∑–Ω–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∑—ã–∫–æ–≤. –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö, –∏ —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n\n' \
                     '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –º–æ–∂–Ω–æ:\n' \
                     '- –∫–æ–º–∞–Ω–¥–∞–º–∏ /settings, /start, /help;\n' \
                     '- –ø—Ä–æ–º–æ—Ç–∞–≤ –ø–µ—Ä–µ–ø–∏—Å–∫—É –¥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è;\n' \
                     '- –æ—á–∏—Å—Ç–∏–≤ –∏—Å—Ç–æ—Ä–∏—é –≤ —ç—Ç–æ–º —á–∞—Ç–µ.'
    keyboard = show_keyboard()
    bot.send_message(message.chat.id, text=hello_and_help, reply_markup=keyboard)


@bot.message_handler(commands=['help'])
def help_command(message):
    help = '–ü—Ä–∏–≤–µ—Ç, —è —Å–ª–æ–≤–∞—Ä—å! –í —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ —è –∏—Å–ø–æ–ª—å–∑—É—é API —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–°–ª–æ–≤–∞—Ä—å. ' \
           '–ï—Å–ª–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–∏—Å–∫–∞ —Ç—ã –≤–∏–¥–∏—à—å –æ—à–∏–±–∫—É –∏–ª–∏ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∞, —Ç–æ –≤–∏–Ω–æ–≤–∞—Ç, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ —è :) \n\n' \
            '–Ø —É–º–µ—é –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å ' \
            '–∫–∞–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, —Ç–∞–∫ –∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ. \n\n' \
            '–Ø –∑–Ω–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∑—ã–∫–æ–≤. –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö, –∏ —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã —è–∑—ã–∫–∞.\n\n' \
            '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –º–æ–∂–Ω–æ:\n' \
                '- –∫–æ–º–∞–Ω–¥–∞–º–∏ /settings, /start, /help;\n' \
                '- –ø—Ä–æ–º–æ—Ç–∞–≤ –ø–µ—Ä–µ–ø–∏—Å–∫—É –¥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è;\n' \
                '- –æ—á–∏—Å—Ç–∏–≤ –∏—Å—Ç–æ—Ä–∏—é –≤ —ç—Ç–æ–º —á–∞—Ç–µ.\n\n' \
           '–ò–Ω–æ–≥–¥–∞ —è –º–æ–≥—É –ø–æ–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–±—è –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ –∑–∞–Ω–æ–≤–æ. –ó–Ω–∞—á–∏—Ç, –≤ —ç—Ç–æ–º –ø–æ—è–≤–∏–ª–∞—Å—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å. ' \
           '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!'
    keyboard = show_keyboard()
    bot.send_message(message.chat.id, text=help, reply_markup=keyboard)

@bot.message_handler(commands=['settings'])
def settings_command(message):
    # –∑–¥–µ—Å—å –æ–±–Ω—É–ª—è–µ–º language, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —è–∑—ã–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞–ª –≤–≤–æ–¥
    global language
    language = {}
    keyboard = show_keyboard()
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏ —è–∑—ã–∫:', reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def prepare_answer(message):
    # –µ—Å–ª–∏ language –ø—É—Å—Ç, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª —è–∑—ã–∫, –ø—Ä–æ—Å–∏–º –µ–≥–æ –æ–± —ç—Ç–æ–º
    if len(language) == 0:
        keyboard = show_keyboard()
        bot.send_message(message.chat.id, text='–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫:', reply_markup=keyboard)
    # –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
    else:
        global lang
        # –µ—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è language
        if check_cyrillic(message.text) is True:
            lang = language['native']
        # –∏–Ω–∞—á–µ - —Ç–æ–∂–µ
        else:
            lang = language['foreign']
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        URL = '{base_url}key={token_ya}&lang={lang}&text={text}'.format(base_url=base_url, token_ya=token_ya, lang=lang, text=message.text.lower())
        # –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –≤–∑—è–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
        global data
        data = json.loads(requests.get(URL).text)
        # –µ—Å–ª–∏ –∫–æ–¥ –æ—à–∏–±–∫–∏ –Ω–µ –ø—É—Å—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏
        if data.get('code') is not None:
            bot.send_message(message.from_user.id, error_code())
        else:
            # –≤—ã—Ç—è–≥–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª—é—á–æ–º 'def', —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–∑ 1 —ç–ª–µ–º–µ–Ω—Ç–∞
            global list
            list = data.get('def')
            # –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, —Ç–æ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–æ —Å–ø–∏—Å–∫–æ–º
            if len(list) == 0:
                bot.send_message(message.from_user.id, text='–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è :(')
            else:
                word_extraction()
                bot.send_message(message.from_user.id, answer)


# —Å–æ–∑–¥–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def show_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    key_en = types.InlineKeyboardButton(text='English', callback_data='English')
    keyboard.add(key_en)
    key_fr = types.InlineKeyboardButton(text='Fran√ßais', callback_data='Fran√ßais')
    key_de = types.InlineKeyboardButton(text='Deutsch', callback_data='Deutsch')
    keyboard.row(key_fr, key_de)
    key_it = types.InlineKeyboardButton(text='Italiano', callback_data='Italiano')
    key_es = types.InlineKeyboardButton(text='Espa√±ol', callback_data='Espa√±ol')
    keyboard.row(key_it, key_es)
    key_tr = types.InlineKeyboardButton(text='T√ºrk√ße', callback_data='T√ºrk√ße')
    key_pl = types.InlineKeyboardButton(text='Polski', callback_data='Polski')
    keyboard.row(key_tr, key_pl)
    return keyboard


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫, –≥–¥–µ call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global language
    if call.data == 'English':
        language = {'native': 'ru-en', 'foreign': 'en-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ English üá¨üáß:'}
    elif call.data == 'Fran√ßais':
        language = {'native': 'ru-fr', 'foreign': 'fr-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ Fran√ßais üá´üá∑:'}
    elif call.data == 'Deutsch':
        language = {'native': 'ru-de', 'foreign': 'de-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ Deutsch üá©üá™:'}
    elif call.data == 'Italiano':
        language = {'native': 'ru-it', 'foreign': 'it-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ Italiano üáÆüáπ:'}
    elif call.data == 'Espa√±ol':
        language = {'native': 'ru-es', 'foreign': 'es-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ Espa√±ol üá™üá∏:'}
    elif call.data == 'T√ºrk√ße':
        language = {'native': 'ru-tr', 'foreign': 'tr-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ T√ºrk√ße üáπüá∑:'}
    elif call.data == 'Polski':
        language = {'native': 'ru-pl', 'foreign': 'pl-ru', 'language': '–†—É—Å—Å–∫–∏–π üá∑üá∫ Polski üáµüá±:'}
    bot.send_message(call.message.chat.id, '–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –±—É–¥–µ–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å?')


# –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–ª–æ–≤–æ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ –∏–ª–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–∞–±–ª–∏—Ü—ã —Å–∏–º–≤–æ–ª–æ–≤ –Æ–Ω–∏–∫–æ–¥–∞
def check_cyrillic(word):
    if u'\u0400' <= word <=u'\u04FF':
        return True
    else:
        return False


# –∏–∑–≤–ª–µ–∫–∞–µ–º —Å–ª–æ–≤–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤ –∫—Ä–∞—Å–∏–≤—ã–π –≤–∏–¥
def word_extraction():
    # –≤—ã—Ç—è–≥–∏–≤–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ 'text', 'pos', 'gen', 'anm', 'tr'
    dictionary = list[0]
    # –≤—ã—Ç—è–≥–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª—é—á–æ–º 'tr', —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–∑ —Å–ª–æ–≤–∞—Ä–µ–π
    translation = dictionary.get('tr')
    global answer
    answer = language['language'] + '\n'
    n = 1
    # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ 'text'
    for i in translation:
        answer += str(n) + '. ' + str.capitalize(i.get('text'))
        n += 1
        # –µ—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª—é—á–æ–º 'syn', —Ç–æ –∏–∑–≤–ª–µ–∫–∞–µ–º —Å–∏–Ω–æ–Ω–∏–º—ã, —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
        if i.get('syn') is not None:
            synonyms = i.get('syn')
            # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ 'text'
            answer += ', ' + str(', '.join([j.get('text') for j in synonyms])) + '\n'
        if i.get('mean') is not None:
            meanings = i.get('mean')
            # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ 'text'
            answer += ' (' + str(', '.join([j.get('text') for j in meanings])) + ')\n'
        else:
            answer = answer + '\n'


# –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–æ–¥–æ–º
def error_code():
    if data.get('code') == 200:
        error = '–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...'
    elif data.get('code') == 401:
        error = '–ö–ª—é—á API –Ω–µ–≤–∞–ª–∏–¥–µ–Ω'
    elif data.get('code') == 402:
        error = '–ö–ª—é—á API –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
    elif data.get('code') == 403:
        error = '–ü—Ä–µ–≤—ã—à–µ–Ω–æ —Å—É—Ç–æ—á–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤'
    elif data.get('code') == 413:
        error = '–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞'
    elif data.get('code') == 501:
        error = '–ó–∞–¥–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'
    return error


if __name__ == '__main__':
    bot.infinity_polling()



